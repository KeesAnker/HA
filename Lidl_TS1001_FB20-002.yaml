blueprint:
  name: Control lights with Zigbee switch
  description: Use a Zigbee2MQTT switch to control lights via MQTT actions.
  domain: automation
  input:
    zigbee_topic:
      name: Zigbee2MQTT topic
      description: The MQTT topic of the Zigbee switch (e.g., zigbee2mqtt/switch/action)
      default: "zigbee2mqtt/switch/action"
    lights:
      name: Lights
      description: Select the lights to control
      selector:
        target:
          entity:
            domain: light

trigger:
  - platform: mqtt
    topic: !input zigbee_topic

variables:
  command: "{{ trigger.payload }}"

action:
  - service: system_log.write
    data:
      message: "Received Zigbee command: {{ command }}"
      level: warning
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ command == 'on' }}"
        sequence:
          - service: light.turn_on
            target: !input lights
            data:
              transition: 1
              brightness_pct: 85
      - conditions:
          - condition: template
            value_template: "{{ command == 'off' }}"
        sequence:
          - service: light.turn_off
            target: !input lights
            data:
              transition: 1
      - conditions:
          - condition: template
            value_template: "{{ command == 'brightness_step_up' }}"
        sequence:
          - service: light.turn_on
            target: !input lights
            data:
              brightness_step_pct: 10
              transition: 1
      - conditions:
          - condition: template
            value_template: "{{ command == 'brightness_step_down' }}"
        sequence:
          - service: light.turn_on
            target: !input lights
            data:
              brightness_step_pct: -10
              transition: 1
  - service: system_log.write
    data:
      message: "Action executed for command: {{ command }}"
      level: info

mode: restart
max_exceeded: silent
